plugins {
    id 'idea'
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.diffplug.spotless' version '6.21.0'
    id 'org.springdoc.openapi-gradle-plugin' version '1.7.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Modulithを使えないかな
    // https://docs.spring.io/spring-modulith/docs/current-SNAPSHOT/reference/html/
    implementation project(':campaign')

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-docker-compose')

    implementation('io.micrometer:micrometer-tracing-bridge-otel')
    implementation('io.opentelemetry:opentelemetry-exporter-zipkin')
    implementation('io.micrometer:micrometer-registry-prometheus')

    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0')

    developmentOnly('org.springframework.boot:spring-boot-devtools')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('com.tngtech.archunit:archunit-junit5:1.1.0')
    testImplementation('com.intuit.karate:karate-junit5:1.4.0')
    testImplementation('net.masterthought:cucumber-reporting:5.7.6')
}

spotless {
    java {
        googleJavaFormat()
    }
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
    systemProperty "karate.options", System.properties.getProperty("karate.options")
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    outputs.upToDateWhen { false }
    if (project.hasProperty('excludeTests')) {
        exclude project.property('excludeTests')
    }
}
