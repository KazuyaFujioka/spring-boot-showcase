plugins {
    id 'idea'
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'io.github.lognet.grpc-spring-boot' version '5.1.5'
    id 'com.diffplug.spotless' version '6.25.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Modulithを使えないかな
    // https://docs.spring.io/spring-modulith/docs/current-SNAPSHOT/reference/html/
    implementation project(':campaign')
    implementation project(':campaign-proto')

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-docker-compose')

    implementation('io.github.lognet:grpc-spring-boot-starter')
    implementation('com.google.protobuf:protobuf-java-util:3.25.3')

    implementation('io.micrometer:micrometer-tracing-bridge-otel')
    implementation('io.opentelemetry:opentelemetry-exporter-zipkin')
    implementation('io.micrometer:micrometer-registry-prometheus')
    implementation('io.opentelemetry.instrumentation:opentelemetry-grpc-1.6:1.32.0-alpha')

    developmentOnly('org.springframework.boot:spring-boot-devtools')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('com.tngtech.archunit:archunit-junit5:1.2.1')
}

configurations.all {
    resolutionStrategy.eachDependency { details ->
        if ("io.grpc".equalsIgnoreCase(details.requested.group)) {
            details.useVersion "1.58.0"
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

spotless {
    java {
        target 'src/**/*.java'
        googleJavaFormat()
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
