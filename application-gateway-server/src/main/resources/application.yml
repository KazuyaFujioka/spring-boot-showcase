spring:
  application:
    name: application-gateway-server
  docker:
    compose:
      enabled: false

  cloud:
    gateway:
      # FIXME spring cloud gatewayを使う為にはSSL/TLS設定が必須
      httpclient:
        ssl:
          use-insecure-trust-manager: true
      routes:
        - id: find-ongoing-campaign-rest
          uri: ${FIND_ONGOING_CAMPAIGN_REST}
          predicates:
            - Path=/v1/campaign/ongoing
        - id: find-campaign-rest
          uri: ${FIND_ONGOING_CAMPAIGN_REST}
          predicates:
            - Path=/v1/campaign/**
        - id: find-ongoing-campaign-grpc
          uri: ${FIND_ONGOING_CAMPAIGN_gRPC}
          predicates:
            - Path=/protobuf.CampaignService/findOngoingCampaign
          filters:
            - AddResponseHeader=X-Request-header, header-value
        - id: find-campaign-grpc
          uri: ${FIND_ONGOING_CAMPAIGN_gRPC}
          predicates:
            - Path=/protobuf.CampaignService/findCampaign
          filters:
            - AddResponseHeader=X-Request-header, header-value

server:
  # FIXME spring cloud gatewayを使う為にはSSL/TLS設定が必須
  http2:
    enabled: true
  ssl:
    key-store-type: ${GATEWAY_SSL_KEY_STORE_TYPE}
    key-store: ${GATEWAY_SSL_KEY_STORE}
    key-store-password: ${GATEWAY_SSL_KEY_STORE_PASSWORD}
    key-password: ${GATEWAY_SSL_KEY_PASSWORD}
    enabled: true
  shutdown: graceful
  compression:
    enabled: true

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include:
          - "health"
          - "prometheus"
  endpoint:
    health:
      enabled: true
      probes:
        enabled: true
    prometheus:
      enabled: true
  observations:
    key-values:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0
